# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.3"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
  #   gradle(task: "assembleRelease")
  #   crashlytics

  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here
  # end
  desc "asseble debug"
  lane :debug do
    gradle(task: "assembleDebug")
  end

  lane :release_abb_all do
    gradle(task: "bundleRelease")
  end

  lane :debug_abb_all do
    gradle(task: "bundleDebug")
  end

  lane :debug_apk_all do
  end

  lane :release_apk_all do
    gradle(
      task: "assembleRelease"
    )
  end

  lane :release_apk_apple do
    gradle(
      task: "assemble",
      build_type: "Release",
      flavor: "Apple",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => "/Users/amlwin/AndroidStudioProjects/buildvarienttesting/sign_key/apple_sign",
        "android.injected.signing.store.password" => "bapple",
        "android.injected.signing.key.alias" => "apple",
        "android.injected.signing.key.password" => "bapple",
      }
      )
  end
  
  lane :clean do
    gradle(
      task: "clean"
    )
  end


  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is sent or shared. Learn more at https://github.com/fastlane/enhancer
